<project name="browscap" default="jar" xmlns:ivy="antlib:org.apache.ivy.ant">
	<property name="ivy.install.version" value="2.3.0-rc1" />
	<property name="ivy.home" value="${user.home}/.ivy2" />

	<property name="ivy.jar.dir" value="${ivy.home}/lib" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

	<property name="lib.dir" value="${basedir}/lib" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="src.tests" value="${basedir}/test" />
	<property name="dist.dir" value="${basedir}/target" />

	<property name="ivy.settings.dir" value="${basedir}" />
	<property file="${ivy.settings.dir}/ivysettings.properties" />

	<path id="lib.path.id">
		<fileset dir="${lib.dir}" />
	</path>

        <target name="-check-ivy-settings" unless="ivysettings.exists">
          <available property="ivysettings.exists" file="${ivy.settings.dir}/ivysettings.xml"/>
	</target>
        <target name="load-ivy-settings" depends="-check-ivy-settings" if="${ivysettings.exists}">
	  <ivy:settings file="${ivy.settings.dir}/ivysettings.xml" />
	</target>

	<target name="download-ivy" unless="offline">
		<mkdir dir="${ivy.jar.dir}" />
		<!-- download Ivy from web site so that it can be used even without any special installation -->
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" />
	</target>

	<target name="resolve" description="retrieve dependencies with ivy" depends="load-ivy-settings">
		<ivy:retrieve />
	</target>

	<target name="clean" description="clean the project">
		<delete includeemptydirs="true" quiet="true">
			<fileset dir="${build.dir}" />
		</delete>
	</target>

	<target name="compile" depends="resolve">
		<ivy:cachepath pathid="default.classpath" conf="default" />
		<mkdir dir="${build.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="lib.path.id" includeantruntime="false" />
	</target>

	<target name="test" depends="compile">
	  <junit printsummary="yes">
	    <classpath>
	      <pathelement location="${build.tests}"/>
	      <pathelement path="${java.class.path}"/>
	      <fileset dir="${lib.dir}">
		<include name="**/*.jar"/>
	      </fileset>
	    </classpath>

	    <batchtest fork="yes">
	      <fileset dir="${src.tests}">
		<include name="**/*Test*.java"/>
	      </fileset>
	    </batchtest>
	  </junit>
	</target>

	<target name="jar" depends="compile">
		<mkdir dir="${dist.dir}" />
		<jar jarfile="${dist.dir}/${ant.project.name}-${ivy.revision}.jar">
			<fileset dir="${build.dir}">
				<include name="**/*.class" />
				<include name="**/*.ini" />
			</fileset>
		</jar>
	</target>

	<target name="publish" depends="jar">
		<delete file="${dist.dir}/ivy.xml" />
		<ivy:deliver deliverpattern="${dist.dir}/[artifact]-[revision].[ext]" pubrevision="${ivy.revision}" status="release" />
		<ivy:publish resolver="filesystem-repo" artifactspattern="${dist.dir}/[artifact]-[revision].[ext]" status="release" pubrevision="${ivy.revision}" />
	</target>

	<target name="clean-cache" description="--> clean the ivy cache">
		<ivy:cleancache />
	</target>
</project>
